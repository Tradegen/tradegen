{
  "contractName": "IFeePool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "addFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currencyKey",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "claimAvailableFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPositionsAndTotal",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "positions",
          "type": "address[]"
        }
      ],
      "name": "addPositionKeys",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"addFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"positions\",\"type\":\"address[]\"}],\"name\":\"addPositionKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currencyKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"claimAvailableFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsAndTotal\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addFees(address,uint256)\":{\"params\":{\"feeAmount\":\"USD value of fee\",\"user\":\"Address of the user\"}},\"addPositionKeys(address[])\":{\"params\":{\"positions\":\"Address of each position the pool/bot had when paying fee\"}},\"claimAvailableFees(address,uint256)\":{\"params\":{\"currencyKey\":\"Address of the currency to claim \",\"numberOfTokens\":\"Number of tokens to claim in the given currency\"}},\"getPoolBalance()\":{\"details\":\"Returns the value of the pool in USD\",\"returns\":{\"_0\":\"uint Value of the pool in USD\"}},\"getPositionsAndTotal()\":{\"details\":\"Returns the currency address and balance of each position the pool has, as well as the cumulative value\",\"returns\":{\"_0\":\"(address[], uint[], uint) Currency address and balance of each position the pool has, and the cumulative value of positions\"}},\"getTokenBalance(address)\":{\"params\":{\"account\":\"Address of the user\"},\"returns\":{\"_0\":\"uint Number of fee tokens\"}},\"getUSDBalance(address)\":{\"details\":\"Returns the balance of the user in USD\",\"returns\":{\"_0\":\"uint Balance of the user in USD\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFees(address,uint256)\":{\"notice\":\"Adds fees to userFunction gets called by Pool whenever users withdraw for a profit\"},\"addPositionKeys(address[])\":{\"notice\":\"Adds currency key to positionKeys array if no position yetFunction gets called by Pool whenever users pay performance fee\"},\"claimAvailableFees(address,uint256)\":{\"notice\":\"Allow a user to claim available fees in the specified currency\"},\"getTokenBalance(address)\":{\"notice\":\"Returns the number of fee tokens the user has\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/xavie/OneDrive/Desktop/TradeGen/Github/tradegen/contracts/interfaces/IFeePool.sol\":\"IFeePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/xavie/OneDrive/Desktop/TradeGen/Github/tradegen/contracts/interfaces/IFeePool.sol\":{\"keccak256\":\"0xc245a11d0fa7417f64e44dfa8f9866cde68f83f8a7703ce1760b1b075e0323a2\",\"urls\":[\"bzz-raw://66860790279e1c32a28d0654b8787e4863634e9d74e4866cfa95bf02ff435992\",\"dweb:/ipfs/Qma48bNSXt2NUvUfZXzvNF4zKHqVrb7wPdzjPSupJ8E6WL\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0;\r\n\r\ninterface IFeePool {\r\n\r\n    /**\r\n    * @notice Returns the number of fee tokens the user has\r\n    * @param account Address of the user\r\n    * @return uint Number of fee tokens\r\n    */\r\n    function getTokenBalance(address account) external view returns (uint);\r\n\r\n    /**\r\n    * @notice Adds fees to user\r\n    * @notice Function gets called by Pool whenever users withdraw for a profit\r\n    * @param user Address of the user\r\n    * @param feeAmount USD value of fee\r\n    */\r\n    function addFees(address user, uint feeAmount) external;\r\n\r\n    /**\r\n    * @notice Allow a user to claim available fees in the specified currency\r\n    * @param currencyKey Address of the currency to claim \r\n    * @param numberOfTokens Number of tokens to claim in the given currency\r\n    */\r\n    function claimAvailableFees(address currencyKey, uint numberOfTokens) external;\r\n\r\n    /**\r\n    * @dev Returns the currency address and balance of each position the pool has, as well as the cumulative value\r\n    * @return (address[], uint[], uint) Currency address and balance of each position the pool has, and the cumulative value of positions\r\n    */\r\n    function getPositionsAndTotal() external view returns (address[] memory, uint[] memory, uint);\r\n\r\n    /**\r\n    * @dev Returns the value of the pool in USD\r\n    * @return uint Value of the pool in USD\r\n    */\r\n    function getPoolBalance() external view returns (uint);\r\n\r\n    /**\r\n    * @dev Returns the balance of the user in USD\r\n    * @return uint Balance of the user in USD\r\n    */\r\n    function getUSDBalance(address user) external view returns (uint);\r\n\r\n    /**\r\n    * @notice Adds currency key to positionKeys array if no position yet\r\n    * @notice Function gets called by Pool whenever users pay performance fee\r\n    * @param positions Address of each position the pool/bot had when paying fee\r\n    */\r\n    function addPositionKeys(address[] memory positions) external;\r\n}",
  "sourcePath": "C:\\Users\\xavie\\OneDrive\\Desktop\\TradeGen\\Github\\tradegen\\contracts\\interfaces\\IFeePool.sol",
  "ast": {
    "absolutePath": "/C/Users/xavie/OneDrive/Desktop/TradeGen/Github/tradegen/contracts/interfaces/IFeePool.sol",
    "exportedSymbols": {
      "IFeePool": [
        990
      ]
    },
    "id": 991,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 932,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 990,
        "linearizedBaseContracts": [
          990
        ],
        "name": "IFeePool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 933,
              "nodeType": "StructuredDocumentation",
              "src": "56:155:5",
              "text": " @notice Returns the number of fee tokens the user has\n @param account Address of the user\n @return uint Number of fee tokens"
            },
            "functionSelector": "3aecd0e3",
            "id": 940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 940,
                  "src": "242:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:17:5"
            },
            "returnParameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 940,
                  "src": "282:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "281:6:5"
            },
            "scope": 990,
            "src": "217:71:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "296:205:5",
              "text": " @notice Adds fees to user\n @notice Function gets called by Pool whenever users withdraw for a profit\n @param user Address of the user\n @param feeAmount USD value of fee"
            },
            "functionSelector": "1dfb9aae",
            "id": 948,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 948,
                  "src": "524:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 948,
                  "src": "538:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "523:30:5"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:5"
            },
            "scope": 990,
            "src": "507:56:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "571:226:5",
              "text": " @notice Allow a user to claim available fees in the specified currency\n @param currencyKey Address of the currency to claim \n @param numberOfTokens Number of tokens to claim in the given currency"
            },
            "functionSelector": "a210c95b",
            "id": 956,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimAvailableFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "currencyKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 956,
                  "src": "831:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 956,
                  "src": "852:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "830:42:5"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:0:5"
            },
            "scope": 990,
            "src": "803:79:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 957,
              "nodeType": "StructuredDocumentation",
              "src": "890:266:5",
              "text": " @dev Returns the currency address and balance of each position the pool has, as well as the cumulative value\n @return (address[], uint[], uint) Currency address and balance of each position the pool has, and the cumulative value of positions"
            },
            "functionSelector": "ac08c574",
            "id": 968,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPositionsAndTotal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:5"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 968,
                  "src": "1217:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 959,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1217:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 960,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1217:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 968,
                  "src": "1235:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 962,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1235:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 963,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1235:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 968,
                  "src": "1250:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1216:39:5"
            },
            "scope": 990,
            "src": "1162:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 969,
              "nodeType": "StructuredDocumentation",
              "src": "1264:105:5",
              "text": " @dev Returns the value of the pool in USD\n @return uint Value of the pool in USD"
            },
            "functionSelector": "abd70aa2",
            "id": 974,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:2:5"
            },
            "returnParameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 974,
                  "src": "1424:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1423:6:5"
            },
            "scope": 990,
            "src": "1375:55:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 975,
              "nodeType": "StructuredDocumentation",
              "src": "1438:109:5",
              "text": " @dev Returns the balance of the user in USD\n @return uint Balance of the user in USD"
            },
            "functionSelector": "2322e3b9",
            "id": 982,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUSDBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 982,
                  "src": "1576:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1575:14:5"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 982,
                  "src": "1613:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1612:6:5"
            },
            "scope": 990,
            "src": "1553:66:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 983,
              "nodeType": "StructuredDocumentation",
              "src": "1627:246:5",
              "text": " @notice Adds currency key to positionKeys array if no position yet\n @notice Function gets called by Pool whenever users pay performance fee\n @param positions Address of each position the pool/bot had when paying fee"
            },
            "functionSelector": "0939b690",
            "id": 989,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPositionKeys",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "positions",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 989,
                  "src": "1904:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 984,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1904:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 985,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1904:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1903:28:5"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:0:5"
            },
            "scope": 990,
            "src": "1879:62:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 991,
        "src": "28:1916:5"
      }
    ],
    "src": "0:1944:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/xavie/OneDrive/Desktop/TradeGen/Github/tradegen/contracts/interfaces/IFeePool.sol",
      "exportedSymbols": {
        "IFeePool": [
          990
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0"
          ]
        },
        "id": 932,
        "name": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            990
          ],
          "name": "IFeePool",
          "scope": 991
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "functionSelector": "3aecd0e3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTokenBalance",
              "overrides": null,
              "scope": 990,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Returns the number of fee tokens the user has\n @param account Address of the user\n @return uint Number of fee tokens"
                },
                "id": 933,
                "name": "StructuredDocumentation",
                "src": "56:155:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "overrides": null,
                      "scope": 940,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 934,
                        "name": "ElementaryTypeName",
                        "src": "242:7:5"
                      }
                    ],
                    "id": 935,
                    "name": "VariableDeclaration",
                    "src": "242:15:5"
                  }
                ],
                "id": 936,
                "name": "ParameterList",
                "src": "241:17:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 940,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 937,
                        "name": "ElementaryTypeName",
                        "src": "282:4:5"
                      }
                    ],
                    "id": 938,
                    "name": "VariableDeclaration",
                    "src": "282:4:5"
                  }
                ],
                "id": 939,
                "name": "ParameterList",
                "src": "281:6:5"
              }
            ],
            "id": 940,
            "name": "FunctionDefinition",
            "src": "217:71:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "1dfb9aae",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addFees",
              "overrides": null,
              "scope": 990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Adds fees to user\n @notice Function gets called by Pool whenever users withdraw for a profit\n @param user Address of the user\n @param feeAmount USD value of fee"
                },
                "id": 941,
                "name": "StructuredDocumentation",
                "src": "296:205:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "overrides": null,
                      "scope": 948,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 942,
                        "name": "ElementaryTypeName",
                        "src": "524:7:5"
                      }
                    ],
                    "id": 943,
                    "name": "VariableDeclaration",
                    "src": "524:12:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "overrides": null,
                      "scope": 948,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 944,
                        "name": "ElementaryTypeName",
                        "src": "538:4:5"
                      }
                    ],
                    "id": 945,
                    "name": "VariableDeclaration",
                    "src": "538:14:5"
                  }
                ],
                "id": 946,
                "name": "ParameterList",
                "src": "523:30:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 947,
                "name": "ParameterList",
                "src": "562:0:5"
              }
            ],
            "id": 948,
            "name": "FunctionDefinition",
            "src": "507:56:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "a210c95b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "claimAvailableFees",
              "overrides": null,
              "scope": 990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Allow a user to claim available fees in the specified currency\n @param currencyKey Address of the currency to claim \n @param numberOfTokens Number of tokens to claim in the given currency"
                },
                "id": 949,
                "name": "StructuredDocumentation",
                "src": "571:226:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "currencyKey",
                      "overrides": null,
                      "scope": 956,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 950,
                        "name": "ElementaryTypeName",
                        "src": "831:7:5"
                      }
                    ],
                    "id": 951,
                    "name": "VariableDeclaration",
                    "src": "831:19:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "numberOfTokens",
                      "overrides": null,
                      "scope": 956,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 952,
                        "name": "ElementaryTypeName",
                        "src": "852:4:5"
                      }
                    ],
                    "id": 953,
                    "name": "VariableDeclaration",
                    "src": "852:19:5"
                  }
                ],
                "id": 954,
                "name": "ParameterList",
                "src": "830:42:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 955,
                "name": "ParameterList",
                "src": "881:0:5"
              }
            ],
            "id": 956,
            "name": "FunctionDefinition",
            "src": "803:79:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "ac08c574",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPositionsAndTotal",
              "overrides": null,
              "scope": 990,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the currency address and balance of each position the pool has, as well as the cumulative value\n @return (address[], uint[], uint) Currency address and balance of each position the pool has, and the cumulative value of positions"
                },
                "id": 957,
                "name": "StructuredDocumentation",
                "src": "890:266:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 958,
                "name": "ParameterList",
                "src": "1191:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 968,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 959,
                            "name": "ElementaryTypeName",
                            "src": "1217:7:5"
                          }
                        ],
                        "id": 960,
                        "name": "ArrayTypeName",
                        "src": "1217:9:5"
                      }
                    ],
                    "id": 961,
                    "name": "VariableDeclaration",
                    "src": "1217:16:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 968,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 962,
                            "name": "ElementaryTypeName",
                            "src": "1235:4:5"
                          }
                        ],
                        "id": 963,
                        "name": "ArrayTypeName",
                        "src": "1235:6:5"
                      }
                    ],
                    "id": 964,
                    "name": "VariableDeclaration",
                    "src": "1235:13:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 968,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 965,
                        "name": "ElementaryTypeName",
                        "src": "1250:4:5"
                      }
                    ],
                    "id": 966,
                    "name": "VariableDeclaration",
                    "src": "1250:4:5"
                  }
                ],
                "id": 967,
                "name": "ParameterList",
                "src": "1216:39:5"
              }
            ],
            "id": 968,
            "name": "FunctionDefinition",
            "src": "1162:94:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "abd70aa2",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPoolBalance",
              "overrides": null,
              "scope": 990,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the value of the pool in USD\n @return uint Value of the pool in USD"
                },
                "id": 969,
                "name": "StructuredDocumentation",
                "src": "1264:105:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 970,
                "name": "ParameterList",
                "src": "1398:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 974,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 971,
                        "name": "ElementaryTypeName",
                        "src": "1424:4:5"
                      }
                    ],
                    "id": 972,
                    "name": "VariableDeclaration",
                    "src": "1424:4:5"
                  }
                ],
                "id": 973,
                "name": "ParameterList",
                "src": "1423:6:5"
              }
            ],
            "id": 974,
            "name": "FunctionDefinition",
            "src": "1375:55:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "2322e3b9",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getUSDBalance",
              "overrides": null,
              "scope": 990,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the balance of the user in USD\n @return uint Balance of the user in USD"
                },
                "id": 975,
                "name": "StructuredDocumentation",
                "src": "1438:109:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "overrides": null,
                      "scope": 982,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 976,
                        "name": "ElementaryTypeName",
                        "src": "1576:7:5"
                      }
                    ],
                    "id": 977,
                    "name": "VariableDeclaration",
                    "src": "1576:12:5"
                  }
                ],
                "id": 978,
                "name": "ParameterList",
                "src": "1575:14:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 982,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 979,
                        "name": "ElementaryTypeName",
                        "src": "1613:4:5"
                      }
                    ],
                    "id": 980,
                    "name": "VariableDeclaration",
                    "src": "1613:4:5"
                  }
                ],
                "id": 981,
                "name": "ParameterList",
                "src": "1612:6:5"
              }
            ],
            "id": 982,
            "name": "FunctionDefinition",
            "src": "1553:66:5"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "0939b690",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addPositionKeys",
              "overrides": null,
              "scope": 990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Adds currency key to positionKeys array if no position yet\n @notice Function gets called by Pool whenever users pay performance fee\n @param positions Address of each position the pool/bot had when paying fee"
                },
                "id": 983,
                "name": "StructuredDocumentation",
                "src": "1627:246:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "positions",
                      "overrides": null,
                      "scope": 989,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 984,
                            "name": "ElementaryTypeName",
                            "src": "1904:7:5"
                          }
                        ],
                        "id": 985,
                        "name": "ArrayTypeName",
                        "src": "1904:9:5"
                      }
                    ],
                    "id": 986,
                    "name": "VariableDeclaration",
                    "src": "1904:26:5"
                  }
                ],
                "id": 987,
                "name": "ParameterList",
                "src": "1903:28:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 988,
                "name": "ParameterList",
                "src": "1940:0:5"
              }
            ],
            "id": 989,
            "name": "FunctionDefinition",
            "src": "1879:62:5"
          }
        ],
        "id": 990,
        "name": "ContractDefinition",
        "src": "28:1916:5"
      }
    ],
    "id": 991,
    "name": "SourceUnit",
    "src": "0:1944:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-26T18:49:08.371Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addFees(address,uint256)": {
        "params": {
          "feeAmount": "USD value of fee",
          "user": "Address of the user"
        }
      },
      "addPositionKeys(address[])": {
        "params": {
          "positions": "Address of each position the pool/bot had when paying fee"
        }
      },
      "claimAvailableFees(address,uint256)": {
        "params": {
          "currencyKey": "Address of the currency to claim ",
          "numberOfTokens": "Number of tokens to claim in the given currency"
        }
      },
      "getPoolBalance()": {
        "details": "Returns the value of the pool in USD",
        "returns": {
          "_0": "uint Value of the pool in USD"
        }
      },
      "getPositionsAndTotal()": {
        "details": "Returns the currency address and balance of each position the pool has, as well as the cumulative value",
        "returns": {
          "_0": "(address[], uint[], uint) Currency address and balance of each position the pool has, and the cumulative value of positions"
        }
      },
      "getTokenBalance(address)": {
        "params": {
          "account": "Address of the user"
        },
        "returns": {
          "_0": "uint Number of fee tokens"
        }
      },
      "getUSDBalance(address)": {
        "details": "Returns the balance of the user in USD",
        "returns": {
          "_0": "uint Balance of the user in USD"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addFees(address,uint256)": {
        "notice": "Adds fees to userFunction gets called by Pool whenever users withdraw for a profit"
      },
      "addPositionKeys(address[])": {
        "notice": "Adds currency key to positionKeys array if no position yetFunction gets called by Pool whenever users pay performance fee"
      },
      "claimAvailableFees(address,uint256)": {
        "notice": "Allow a user to claim available fees in the specified currency"
      },
      "getTokenBalance(address)": {
        "notice": "Returns the number of fee tokens the user has"
      }
    },
    "version": 1
  }
}